#include "Projects/VoronoiFoam/include/Model/Energy/SimplexFunctions/SimplexFunctions3D/PerCellSurfaceArea3D.h"
#include "CRLHelper/MapleHelper.h"

void PerCellSurfaceArea3D::getSimplexValue(const VectorXF &inputs, PerSimplexValue &value) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F z0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F z1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F z2 = inputs[8];

    F t1 = x1 - x0;
    F t2 = t1 * t1;
    F t3 = y1 - y0;
    F t4 = t3 * t3;
    F t5 = z1 - z0;
    F t6 = t5 * t5;
    F t8 = x2 - x0;
    F t9 = t8 * t8;
    F t10 = y2 - y0;
    F t11 = t10 * t10;
    F t12 = z2 - z0;
    F t13 = t12 * t12;
    F t20 = pow(t8 * t1 + t10 * t3 + t12 * t5, 0.2e1);
    F t22 = sqrt((t9 + t11 + t13) * (t2 + t4 + t6) - t20);

    F unknown[1];

    unknown[0] = t22 / 0.2e1;

    processMapleOutput(reinterpret_cast<F *>(unknown), value.value, 1, 1);
    // clang-format on
}

void PerCellSurfaceArea3D::getSimplexGradient(const VectorXF &inputs, PerSimplexValue &value) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F z0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F z1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F z2 = inputs[8];

    F t1 = x1 - x0;
    F t2 = t1 * t1;
    F t3 = y1 - y0;
    F t4 = t3 * t3;
    F t5 = z1 - z0;
    F t6 = t5 * t5;
    F t7 = t2 + t4 + t6;
    F t8 = x2 - x0;
    F t9 = t8 * t8;
    F t10 = y2 - y0;
    F t11 = t10 * t10;
    F t12 = z2 - z0;
    F t13 = t12 * t12;
    F t14 = t9 + t11 + t13;
    F t19 = t8 * t1 + t10 * t3 + t12 * t5;
    F t20 = t19 * t19;
    F t22 = sqrt(t14 * t7 - t20);
    F t23 = 0.1e1 / t22;

    F unknown[9];

    unknown[0] = (-0.2e1 * t14 * t1 - 0.2e1 * t8 * t7 - 0.2e1 * (0.2e1 * x0 - x2 - x1) * t19) * t23 / 0.4e1;
    unknown[1] = (-0.2e1 * t14 * t3 - 0.2e1 * t10 * t7 - 0.2e1 * (-y2 + 0.2e1 * y0 - y1) * t19) * t23 / 0.4e1;
    unknown[2] = (-0.2e1 * t14 * t5 - 0.2e1 * t12 * t7 - 0.2e1 * (0.2e1 * z0 - z2 - z1) * t19) * t23 / 0.4e1;
    unknown[3] = (0.2e1 * t14 * t1 - 0.2e1 * t8 * t19) * t23 / 0.4e1;
    unknown[4] = (-0.2e1 * t10 * t19 + 0.2e1 * t14 * t3) * t23 / 0.4e1;
    unknown[5] = (-0.2e1 * t12 * t19 + 0.2e1 * t14 * t5) * t23 / 0.4e1;
    unknown[6] = (-0.2e1 * t1 * t19 + 0.2e1 * t8 * t7) * t23 / 0.4e1;
    unknown[7] = (0.2e1 * t10 * t7 - 0.2e1 * t3 * t19) * t23 / 0.4e1;
    unknown[8] = (0.2e1 * t12 * t7 - 0.2e1 * t5 * t19) * t23 / 0.4e1;

    processMapleOutput(reinterpret_cast<F *>(unknown), value.gradient, 9, 1);
    // clang-format on
}

void PerCellSurfaceArea3D::getSimplexHessian(const VectorXF &inputs, PerSimplexValue &value) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F z0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F z1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F z2 = inputs[8];

    F t1 = x1 - x0;
    F t2 = t1 * t1;
    F t3 = y1 - y0;
    F t4 = t3 * t3;
    F t5 = z1 - z0;
    F t6 = t5 * t5;
    F t7 = t2 + t4 + t6;
    F t8 = x2 - x0;
    F t9 = t8 * t8;
    F t10 = y2 - y0;
    F t11 = t10 * t10;
    F t12 = z2 - z0;
    F t13 = t12 * t12;
    F t14 = t9 + t11 + t13;
    F t16 = t8 * t1;
    F t17 = t10 * t3;
    F t18 = t12 * t5;
    F t19 = t16 + t17 + t18;
    F t20 = t19 * t19;
    F t21 = t14 * t7 - t20;
    F t22 = sqrt(t21);
    F t24 = 0.1e1 / t22 / t21;
    F t28 = 0.2e1 * x0 - x2 - x1;
    F t31 = -0.2e1 * t14 * t1 - 0.2e1 * t28 * t19 - 0.2e1 * t8 * t7;
    F t32 = t31 * t31;
    F t35 = 0.1e1 / t22;
    F t36 = 0.2e1 * t9;
    F t37 = 0.2e1 * t11;
    F t38 = 0.2e1 * t13;
    F t39 = 0.4e1 * t8 * t1;
    F t41 = 0.2e1 * t2;
    F t42 = 0.2e1 * t4;
    F t43 = 0.2e1 * t6;
    F t44 = t28 * t28;
    F t46 = 0.4e1 * t16;
    F t47 = 0.4e1 * t17;
    F t48 = 0.4e1 * t18;
    F t49 = t36 + t37 + t38 + 0.2e1 * t39 + t41 + t42 + t43 - 0.2e1 * t44 - t46 - t47 - t48;
    F t53 = t31 * t24;
    F t57 = -y2 + 0.2e1 * y0 - y1;
    F t60 = -0.2e1 * t10 * t7 - 0.2e1 * t14 * t3 - 0.2e1 * t57 * t19;
    F t63 = 0.4e1 * t10 * t1;
    F t64 = 0.4e1 * t8 * t3;
    F t70 = -t60 * t53 / 0.8e1 + (-0.2e1 * t28 * t57 + t63 + t64) * t35 / 0.4e1;
    F t74 = 0.2e1 * z0 - z2 - z1;
    F t77 = -0.2e1 * t12 * t7 - 0.2e1 * t14 * t5 - 0.2e1 * t74 * t19;
    F t80 = 0.4e1 * t12 * t1;
    F t81 = 0.4e1 * t8 * t5;
    F t87 = -t77 * t53 / 0.8e1 + (-0.2e1 * t28 * t74 + t80 + t81) * t35 / 0.4e1;
    F t91 = 0.2e1 * t14 * t1 - 0.2e1 * t8 * t19;
    F t94 = -0.4e1 * t8 * t1;
    F t97 = 0.2e1 * t16;
    F t98 = 0.2e1 * t17;
    F t99 = 0.2e1 * t18;
    F t103 = -t91 * t53 / 0.8e1 + (-0.2e1 * t28 * t8 - t36 - t37 - t38 + t94 + t97 + t98 + t99) * t35 / 0.4e1;
    F t107 = -0.2e1 * t10 * t19 + 0.2e1 * t14 * t3;
    F t110 = -0.4e1 * t8 * t3;
    F t116 = -t107 * t53 / 0.8e1 + (-0.2e1 * t28 * t10 + t110) * t35 / 0.4e1;
    F t120 = -0.2e1 * t12 * t19 + 0.2e1 * t14 * t5;
    F t123 = -0.4e1 * t8 * t5;
    F t129 = -t120 * t53 / 0.8e1 + (-0.2e1 * t28 * t12 + t123) * t35 / 0.4e1;
    F t133 = -0.2e1 * t1 * t19 + 0.2e1 * t8 * t7;
    F t141 = -t133 * t53 / 0.8e1 + (-0.2e1 * t28 * t1 - t41 - t42 - t43 + t94 + t97 + t98 + t99) * t35 / 0.4e1;
    F t145 = 0.2e1 * t10 * t7 - 0.2e1 * t3 * t19;
    F t148 = -0.4e1 * t10 * t1;
    F t154 = -t145 * t53 / 0.8e1 + (-0.2e1 * t28 * t3 + t148) * t35 / 0.4e1;
    F t158 = 0.2e1 * t12 * t7 - 0.2e1 * t5 * t19;
    F t161 = -0.4e1 * t12 * t1;
    F t167 = -t158 * t53 / 0.8e1 + (-0.2e1 * t28 * t5 + t161) * t35 / 0.4e1;
    F t168 = t60 * t60;
    F t171 = 0.4e1 * t10 * t3;
    F t173 = t57 * t57;
    F t175 = t36 + t37 + t38 + 0.2e1 * t171 + t41 + t42 + t43 - 0.2e1 * t173 - t46 - t47 - t48;
    F t179 = t60 * t24;
    F t182 = 0.4e1 * t12 * t3;
    F t183 = 0.4e1 * t10 * t5;
    F t189 = -t77 * t179 / 0.8e1 + (-0.2e1 * t57 * t74 + t182 + t183) * t35 / 0.4e1;
    F t197 = -t91 * t179 / 0.8e1 + (-0.2e1 * t57 * t8 + t148) * t35 / 0.4e1;
    F t200 = -0.4e1 * t10 * t3;
    F t206 = -t107 * t179 / 0.8e1 + (-0.2e1 * t57 * t10 + t200 - t36 - t37 - t38 + t97 + t98 + t99) * t35 / 0.4e1;
    F t209 = -0.4e1 * t10 * t5;
    F t215 = -t120 * t179 / 0.8e1 + (-0.2e1 * t57 * t12 + t209) * t35 / 0.4e1;
    F t223 = -t133 * t179 / 0.8e1 + (-0.2e1 * t57 * t1 + t110) * t35 / 0.4e1;
    F t231 = -t145 * t179 / 0.8e1 + (-0.2e1 * t57 * t3 + t200 - t41 - t42 - t43 + t97 + t98 + t99) * t35 / 0.4e1;
    F t234 = -0.4e1 * t12 * t3;
    F t240 = -t158 * t179 / 0.8e1 + (-0.2e1 * t57 * t5 + t234) * t35 / 0.4e1;
    F t241 = t77 * t77;
    F t244 = 0.4e1 * t12 * t5;
    F t246 = t74 * t74;
    F t248 = t36 + t37 + t38 + 0.2e1 * t244 + t41 + t42 + t43 - 0.2e1 * t246 - t46 - t47 - t48;
    F t252 = t77 * t24;
    F t260 = -t91 * t252 / 0.8e1 + (-0.2e1 * t74 * t8 + t161) * t35 / 0.4e1;
    F t268 = -t107 * t252 / 0.8e1 + (-0.2e1 * t74 * t10 + t234) * t35 / 0.4e1;
    F t271 = -0.4e1 * t12 * t5;
    F t277 = -t120 * t252 / 0.8e1 + (-0.2e1 * t74 * t12 + t271 - t36 - t37 - t38 + t97 + t98 + t99) * t35 / 0.4e1;
    F t285 = -t133 * t252 / 0.8e1 + (-0.2e1 * t74 * t1 + t123) * t35 / 0.4e1;
    F t293 = -t145 * t252 / 0.8e1 + (-0.2e1 * t74 * t3 + t209) * t35 / 0.4e1;
    F t301 = -t158 * t252 / 0.8e1 + (-0.2e1 * t74 * t5 + t271 - t41 - t42 - t43 + t97 + t98 + t99) * t35 / 0.4e1;
    F t302 = t91 * t91;
    F t309 = t91 * t24;
    F t315 = -t107 * t309 / 0.8e1 - t8 * t10 * t35 / 0.2e1;
    F t318 = t12 * t35;
    F t321 = -t120 * t309 / 0.8e1 - t8 * t318 / 0.2e1;
    F t327 = -t133 * t309 / 0.8e1 + (t39 - t46 - t98 - t99) * t35 / 0.4e1;
    F t335 = -t145 * t309 / 0.8e1 + (-0.2e1 * t8 * t3 + t63) * t35 / 0.4e1;
    F t343 = -t158 * t309 / 0.8e1 + (-0.2e1 * t8 * t5 + t80) * t35 / 0.4e1;
    F t344 = t107 * t107;
    F t351 = t107 * t24;
    F t356 = -t120 * t351 / 0.8e1 - t10 * t318 / 0.2e1;
    F t364 = -t133 * t351 / 0.8e1 + (-0.2e1 * t10 * t1 + t64) * t35 / 0.4e1;
    F t370 = -t145 * t351 / 0.8e1 + (t171 - t47 - t97 - t99) * t35 / 0.4e1;
    F t378 = -t158 * t351 / 0.8e1 + (-0.2e1 * t10 * t5 + t182) * t35 / 0.4e1;
    F t379 = t120 * t120;
    F t386 = t120 * t24;
    F t394 = -t133 * t386 / 0.8e1 + (-0.2e1 * t12 * t1 + t81) * t35 / 0.4e1;
    F t402 = -t145 * t386 / 0.8e1 + (-0.2e1 * t12 * t3 + t183) * t35 / 0.4e1;
    F t408 = -t158 * t386 / 0.8e1 + (t244 - t48 - t97 - t98) * t35 / 0.4e1;
    F t409 = t133 * t133;
    F t416 = t133 * t24;
    F t422 = -t145 * t416 / 0.8e1 - t1 * t3 * t35 / 0.2e1;
    F t425 = t5 * t35;
    F t428 = -t158 * t416 / 0.8e1 - t1 * t425 / 0.2e1;
    F t429 = t145 * t145;
    F t441 = -t158 * t145 * t24 / 0.8e1 - t3 * t425 / 0.2e1;
    F t442 = t158 * t158;

    F unknown[9][9];

    unknown[0][0] = -t32 * t24 / 0.8e1 + t49 * t35 / 0.4e1;
    unknown[0][1] = t70;
    unknown[0][2] = t87;
    unknown[0][3] = t103;
    unknown[0][4] = t116;
    unknown[0][5] = t129;
    unknown[0][6] = t141;
    unknown[0][7] = t154;
    unknown[0][8] = t167;
    unknown[1][0] = t70;
    unknown[1][1] = -t168 * t24 / 0.8e1 + t175 * t35 / 0.4e1;
    unknown[1][2] = t189;
    unknown[1][3] = t197;
    unknown[1][4] = t206;
    unknown[1][5] = t215;
    unknown[1][6] = t223;
    unknown[1][7] = t231;
    unknown[1][8] = t240;
    unknown[2][0] = t87;
    unknown[2][1] = t189;
    unknown[2][2] = -t241 * t24 / 0.8e1 + t248 * t35 / 0.4e1;
    unknown[2][3] = t260;
    unknown[2][4] = t268;
    unknown[2][5] = t277;
    unknown[2][6] = t285;
    unknown[2][7] = t293;
    unknown[2][8] = t301;
    unknown[3][0] = t103;
    unknown[3][1] = t197;
    unknown[3][2] = t260;
    unknown[3][3] = -t302 * t24 / 0.8e1 + (t11 + t13) * t35 / 0.2e1;
    unknown[3][4] = t315;
    unknown[3][5] = t321;
    unknown[3][6] = t327;
    unknown[3][7] = t335;
    unknown[3][8] = t343;
    unknown[4][0] = t116;
    unknown[4][1] = t206;
    unknown[4][2] = t268;
    unknown[4][3] = t315;
    unknown[4][4] = -t344 * t24 / 0.8e1 + (t9 + t13) * t35 / 0.2e1;
    unknown[4][5] = t356;
    unknown[4][6] = t364;
    unknown[4][7] = t370;
    unknown[4][8] = t378;
    unknown[5][0] = t129;
    unknown[5][1] = t215;
    unknown[5][2] = t277;
    unknown[5][3] = t321;
    unknown[5][4] = t356;
    unknown[5][5] = -t379 * t24 / 0.8e1 + (t9 + t11) * t35 / 0.2e1;
    unknown[5][6] = t394;
    unknown[5][7] = t402;
    unknown[5][8] = t408;
    unknown[6][0] = t141;
    unknown[6][1] = t223;
    unknown[6][2] = t285;
    unknown[6][3] = t327;
    unknown[6][4] = t364;
    unknown[6][5] = t394;
    unknown[6][6] = -t409 * t24 / 0.8e1 + (t4 + t6) * t35 / 0.2e1;
    unknown[6][7] = t422;
    unknown[6][8] = t428;
    unknown[7][0] = t154;
    unknown[7][1] = t231;
    unknown[7][2] = t293;
    unknown[7][3] = t335;
    unknown[7][4] = t370;
    unknown[7][5] = t402;
    unknown[7][6] = t422;
    unknown[7][7] = -t429 * t24 / 0.8e1 + (t2 + t6) * t35 / 0.2e1;
    unknown[7][8] = t441;
    unknown[8][0] = t167;
    unknown[8][1] = t240;
    unknown[8][2] = t301;
    unknown[8][3] = t343;
    unknown[8][4] = t378;
    unknown[8][5] = t408;
    unknown[8][6] = t428;
    unknown[8][7] = t441;
    unknown[8][8] = -t442 * t24 / 0.8e1 + (t2 + t4) * t35 / 0.2e1;

    processMapleOutput(reinterpret_cast<F *>(unknown), value.hessian, 9, 9);
    // clang-format on
}
