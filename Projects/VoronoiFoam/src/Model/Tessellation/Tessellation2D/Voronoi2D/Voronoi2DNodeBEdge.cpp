#include "Projects/VoronoiFoam/include/Model/Tessellation/Tessellation2D/Voronoi2D/Voronoi2D.h"
#include "CRLHelper/MapleHelper.h"

void Voronoi2D::computeNodePosBEdge(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F xb0 = inputs[0];
    F yb0 = inputs[1];
    F xb1 = inputs[2];
    F yb1 = inputs[3];
    F x0 = inputs[4];
    F y0 = inputs[5];
    F x1 = inputs[6];
    F y1 = inputs[7];

    F t1 = x0 * x0;
    F t2 = x1 * x1;
    F t3 = y0 * y0;
    F t6 = y1 * y1;
    F t18 = -x1 + x0;
    F t22 = y0 - y1;

    F unknown[2];

    unknown[0] = 0.1e1 / (0.2e1 * xb0 * t18 - 0.2e1 * xb1 * t18 + 0.2e1 * t22 * (-yb1 + yb0)) * (xb0 * (-0.2e1 * y0 * yb1 + 0.2e1 * y1 * yb1 + t1 - t2 + t3 - t6) - (-0.2e1 * y0 * yb0 + 0.2e1 * y1 * yb0 + t1 - t2 + t3 - t6) * xb1);
    unknown[1] = 0.1e1 / (0.2e1 * yb0 * t22 - 0.2e1 * yb1 * t22 + 0.2e1 * t18 * (-xb1 + xb0)) * (yb0 * (-0.2e1 * x0 * xb1 + 0.2e1 * x1 * xb1 + t1 - t2 + t3 - t6) - (-0.2e1 * x0 * xb0 + 0.2e1 * x1 * xb0 + t1 - t2 + t3 - t6) * yb1);

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.pos, 2, 1);
    // clang-format on
}

void Voronoi2D::computeNodeGradBEdge(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F xb0 = inputs[0];
    F yb0 = inputs[1];
    F xb1 = inputs[2];
    F yb1 = inputs[3];
    F x0 = inputs[4];
    F y0 = inputs[5];
    F x1 = inputs[6];
    F y1 = inputs[7];

    F t1 = x0 * x0;
    F t2 = x1 * x1;
    F t3 = y0 * y0;
    F t4 = y0 * yb1;
    F t6 = y1 * y1;
    F t7 = y1 * yb1;
    F t9 = t1 - t2 + t3 - 0.2e1 * t4 - t6 + 0.2e1 * t7;
    F t10 = -x1 + x0;
    F t13 = -yb1 + yb0;
    F t14 = y0 - y1;
    F t17 = 0.2e1 * xb0 * t10 - 0.2e1 * xb1 * t10 + 0.2e1 * t14 * t13;
    F t18 = 0.1e1 / t17;
    F t21 = y0 * yb0;
    F t23 = y1 * yb0;
    F t25 = t1 - t2 + t3 - 0.2e1 * t21 - t6 + 0.2e1 * t23;
    F t28 = t17 * t17;
    F t30 = 0.1e1 / t28 * (-t25 * xb1 + xb0 * t9);
    F t44 = x0 * xb0;
    F t45 = x0 * xb1;
    F t48 = -xb1 + xb0;
    F t59 = x1 * xb0;
    F t60 = x1 * xb1;
    F t78 = 0.2e1 * t10 * t48 + 0.2e1 * yb0 * t14 - 0.2e1 * yb1 * t14;
    F t79 = 0.1e1 / t78;
    F t83 = t1 - 0.2e1 * t45 - t2 + 0.2e1 * t60 + t3 - t6;
    F t87 = t1 - 0.2e1 * t44 - t2 + 0.2e1 * t59 + t3 - t6;
    F t90 = t78 * t78;
    F t92 = 0.1e1 / t90 * (yb0 * t83 - t87 * yb1);

    F unknown[2][8];

    unknown[0][0] = -0.2e1 * t10 * t30 + t18 * t9;
    unknown[0][1] = 0.2e1 * t18 * t14 * xb1 - 0.2e1 * t14 * t30;
    unknown[0][2] = 0.2e1 * t10 * t30 - t18 * t25;
    unknown[0][3] = -0.2e1 * t18 * xb0 * t14 + 0.2e1 * t14 * t30;
    unknown[0][4] = 0.2e1 * t18 * (t44 - t45) - 0.2e1 * t48 * t30;
    unknown[0][5] = t18 * (0.2e1 * xb0 * (y0 - yb1) - 0.2e1 * (y0 - yb0) * xb1) - 0.2e1 * t13 * t30;
    unknown[0][6] = 0.2e1 * t18 * (-t59 + t60) + 0.2e1 * t48 * t30;
    unknown[0][7] = t18 * (0.2e1 * xb0 * (-y1 + yb1) - 0.2e1 * (-y1 + yb0) * xb1) + 0.2e1 * t13 * t30;
    unknown[1][0] = 0.2e1 * t79 * t10 * yb1 - 0.2e1 * t10 * t92;
    unknown[1][1] = -0.2e1 * t14 * t92 + t79 * t83;
    unknown[1][2] = -0.2e1 * t79 * yb0 * t10 + 0.2e1 * t10 * t92;
    unknown[1][3] = 0.2e1 * t14 * t92 - t79 * t87;
    unknown[1][4] = t79 * (0.2e1 * yb0 * (x0 - xb1) - 0.2e1 * (x0 - xb0) * yb1) - 0.2e1 * t48 * t92;
    unknown[1][5] = 0.2e1 * t79 * (t21 - t4) - 0.2e1 * t13 * t92;
    unknown[1][6] = t79 * (0.2e1 * yb0 * (-x1 + xb1) - 0.2e1 * (-x1 + xb0) * yb1) + 0.2e1 * t48 * t92;
    unknown[1][7] = 0.2e1 * t79 * (-t23 + t7) + 0.2e1 * t13 * t92;

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.grad, 2, 8);
    // clang-format on
}

void Voronoi2D::computeNodeHessBEdge(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F xb0 = inputs[0];
    F yb0 = inputs[1];
    F xb1 = inputs[2];
    F yb1 = inputs[3];
    F x0 = inputs[4];
    F y0 = inputs[5];
    F x1 = inputs[6];
    F y1 = inputs[7];

    F t1 = x0 * x0;
    F t2 = x1 * x1;
    F t3 = y0 * y0;
    F t4 = y0 * yb1;
    F t6 = y1 * y1;
    F t7 = y1 * yb1;
    F t9 = t1 - t2 + t3 - 0.2e1 * t4 - t6 + 0.2e1 * t7;
    F t10 = -x1 + x0;
    F t13 = -yb1 + yb0;
    F t14 = y0 - y1;
    F t17 = 0.2e1 * t10 * xb0 - 0.2e1 * t10 * xb1 + 0.2e1 * t14 * t13;
    F t18 = t17 * t17;
    F t19 = 0.1e1 / t18;
    F t20 = t19 * t9;
    F t23 = y0 * yb0;
    F t25 = y1 * yb0;
    F t27 = t1 - t2 + t3 - 0.2e1 * t23 - t6 + 0.2e1 * t25;
    F t29 = -t27 * xb1 + t9 * xb0;
    F t32 = 0.1e1 / t17 / t18 * t29;
    F t33 = 0.4e1 * t10 * t10;
    F t34 = t33 * t32;
    F t37 = -0.2e1 * t14 * xb1;
    F t38 = 0.2e1 * t10 * t19;
    F t40 = 0.4e1 * t14 * t10;
    F t42 = 0.2e1 * t40 * t32;
    F t43 = -0.2e1 * t14 * t20 + t37 * t38 + t42;
    F t45 = -t19 * t27;
    F t47 = -0.4e1 * t10 * t10;
    F t50 = 0.2e1 * t10 * t20 - 0.2e1 * t10 * t45 + 0.2e1 * t32 * t47;
    F t51 = 0.1e1 / t17;
    F t52 = -0.2e1 * t51 * t14;
    F t54 = -0.2e1 * xb0 * t14;
    F t56 = -0.4e1 * t14 * t10;
    F t58 = 0.2e1 * t56 * t32;
    F t59 = 0.2e1 * t14 * t20 - t38 * t54 + t52 + t58;
    F t61 = 0.2e1 * t51 * x0;
    F t62 = -xb1 + xb0;
    F t64 = x0 * xb0;
    F t65 = x0 * xb1;
    F t67 = 0.2e1 * t19 * (t64 - t65);
    F t69 = 0.4e1 * t62 * t10;
    F t71 = 0.2e1 * t69 * t32;
    F t73 = 0.2e1 * t19 * t29;
    F t74 = -0.2e1 * t10 * t67 - 0.2e1 * t20 * t62 + t61 + t71 - t73;
    F t75 = y0 - yb1;
    F t79 = y0 - yb0;
    F t82 = t19 * (0.2e1 * t75 * xb0 - 0.2e1 * t79 * xb1);
    F t84 = 0.4e1 * t13 * t10;
    F t86 = 0.2e1 * t84 * t32;
    F t87 = -0.2e1 * t10 * t82 - 0.2e1 * t13 * t20 + 0.2e1 * t51 * t75 + t86;
    F t89 = 0.2e1 * t51 * x1;
    F t91 = x1 * xb0;
    F t92 = x1 * xb1;
    F t94 = 0.2e1 * t19 * (-t91 + t92);
    F t96 = -0.4e1 * t62 * t10;
    F t98 = 0.2e1 * t96 * t32;
    F t99 = -0.2e1 * t10 * t94 + 0.2e1 * t20 * t62 + t73 - t89 + t98;
    F t100 = -y1 + yb1;
    F t104 = -y1 + yb0;
    F t107 = t19 * (0.2e1 * t100 * xb0 - 0.2e1 * t104 * xb1);
    F t109 = -0.4e1 * t13 * t10;
    F t111 = 0.2e1 * t109 * t32;
    F t112 = -0.2e1 * t10 * t107 + 0.2e1 * t100 * t51 + 0.2e1 * t13 * t20 + t111;
    F t113 = 0.2e1 * t14 * t19;
    F t115 = 0.4e1 * t14 * t14;
    F t116 = t115 * t32;
    F t118 = -0.2e1 * t10 * t19;
    F t121 = t118 * t37 - 0.2e1 * t14 * t45 - t52 + t58;
    F t125 = -0.4e1 * t14 * t14;
    F t128 = t115 * t19 * xb1 - t113 * t54 + 0.2e1 * t125 * t32;
    F t129 = 0.2e1 * t62 * t19;
    F t132 = 0.4e1 * t62 * t14;
    F t134 = 0.2e1 * t132 * t32;
    F t135 = t129 * t37 - 0.2e1 * t14 * t67 + t134;
    F t137 = 0.2e1 * t51 * xb1;
    F t138 = 0.2e1 * t13 * t19;
    F t141 = 0.4e1 * t14 * t13;
    F t143 = 0.2e1 * t141 * t32;
    F t144 = t138 * t37 - 0.2e1 * t14 * t82 + t137 + t143 - t73;
    F t145 = -0.2e1 * t62 * t19;
    F t148 = -0.4e1 * t62 * t14;
    F t150 = 0.2e1 * t148 * t32;
    F t151 = -0.2e1 * t14 * t94 + t145 * t37 + t150;
    F t152 = -0.2e1 * t13 * t19;
    F t155 = -0.4e1 * t14 * t13;
    F t157 = 0.2e1 * t155 * t32;
    F t158 = -0.2e1 * t107 * t14 + t152 * t37 - t137 + t157 + t73;
    F t163 = -t118 * t54 + 0.2e1 * t14 * t45 + t42;
    F t166 = 0.2e1 * t10 * t67 - 0.2e1 * t45 * t62 - t61 + t73 + t98;
    F t170 = 0.2e1 * t10 * t82 - 0.2e1 * t13 * t45 - 0.2e1 * t51 * t79 + t111;
    F t173 = 0.2e1 * t10 * t94 + 0.2e1 * t45 * t62 + t71 - t73 + t89;
    F t177 = 0.2e1 * t10 * t107 - 0.2e1 * t104 * t51 + 0.2e1 * t13 * t45 + t86;
    F t183 = -t129 * t54 + 0.2e1 * t14 * t67 + t150;
    F t185 = 0.2e1 * t51 * xb0;
    F t188 = -t138 * t54 + 0.2e1 * t14 * t82 + t157 - t185 + t73;
    F t191 = 0.2e1 * t14 * t94 - t145 * t54 + t134;
    F t194 = 0.2e1 * t107 * t14 - t152 * t54 + t143 + t185 - t73;
    F t195 = 0.2e1 * t51 * t62;
    F t198 = 0.4e1 * t62 * t62;
    F t200 = 0.2e1 * t198 * t32;
    F t204 = 0.4e1 * t13 * t62;
    F t206 = 0.2e1 * t204 * t32;
    F t207 = -0.2e1 * t13 * t67 - 0.2e1 * t62 * t82 + t206;
    F t210 = -0.4e1 * t62 * t62;
    F t213 = 0.2e1 * t210 * t32 + 0.2e1 * t62 * t67 - 0.2e1 * t62 * t94;
    F t216 = -0.4e1 * t13 * t62;
    F t218 = 0.2e1 * t216 * t32;
    F t219 = -0.2e1 * t107 * t62 + 0.2e1 * t13 * t67 + t218;
    F t222 = 0.4e1 * t13 * t13;
    F t224 = 0.2e1 * t222 * t32;
    F t228 = -0.2e1 * t13 * t94 + 0.2e1 * t62 * t82 + t218;
    F t231 = -0.4e1 * t13 * t13;
    F t234 = -0.2e1 * t107 * t13 + 0.2e1 * t13 * t82 + 0.2e1 * t231 * t32;
    F t235 = -0.2e1 * t51 * t62;
    F t241 = 0.2e1 * t107 * t62 + 0.2e1 * t13 * t94 + t206;
    F t245 = -0.2e1 * t10 * yb1;
    F t250 = 0.2e1 * t62 * t10 + 0.2e1 * t14 * yb0 - 0.2e1 * t14 * yb1;
    F t251 = t250 * t250;
    F t252 = 0.1e1 / t251;
    F t253 = 0.2e1 * t10 * t252;
    F t257 = t1 - 0.2e1 * t65 - t2 + 0.2e1 * t92 + t3 - t6;
    F t261 = t1 - 0.2e1 * t64 - t2 + 0.2e1 * t91 + t3 - t6;
    F t263 = t257 * yb0 - t261 * yb1;
    F t266 = 0.1e1 / t250 / t251 * t263;
    F t267 = t33 * t266;
    F t269 = 0.2e1 * t14 * t252;
    F t271 = t252 * t257;
    F t274 = 0.2e1 * t40 * t266;
    F t275 = -0.2e1 * t10 * t271 + t245 * t269 + t274;
    F t278 = -0.2e1 * yb0 * t10;
    F t282 = t252 * t33 * yb1 - t253 * t278 + 0.2e1 * t266 * t47;
    F t283 = 0.1e1 / t250;
    F t284 = -0.2e1 * t283 * t10;
    F t285 = -0.2e1 * t14 * t252;
    F t287 = -t252 * t261;
    F t290 = 0.2e1 * t56 * t266;
    F t291 = -0.2e1 * t10 * t287 + t245 * t285 - t284 + t290;
    F t293 = 0.2e1 * t283 * yb1;
    F t294 = 0.2e1 * t62 * t252;
    F t296 = x0 - xb1;
    F t298 = x0 - xb0;
    F t301 = t252 * (0.2e1 * t296 * yb0 - 0.2e1 * t298 * yb1);
    F t304 = 0.2e1 * t69 * t266;
    F t306 = 0.2e1 * t252 * t263;
    F t307 = -0.2e1 * t10 * t301 + t245 * t294 + t293 + t304 - t306;
    F t308 = 0.2e1 * t13 * t252;
    F t311 = 0.2e1 * t252 * (t23 - t4);
    F t314 = 0.2e1 * t84 * t266;
    F t315 = -0.2e1 * t10 * t311 + t245 * t308 + t314;
    F t316 = -0.2e1 * t62 * t252;
    F t318 = -x1 + xb1;
    F t320 = -x1 + xb0;
    F t323 = t252 * (0.2e1 * t318 * yb0 - 0.2e1 * t320 * yb1);
    F t326 = 0.2e1 * t96 * t266;
    F t327 = -0.2e1 * t10 * t323 + t245 * t316 - t293 + t306 + t326;
    F t328 = -0.2e1 * t13 * t252;
    F t331 = 0.2e1 * t252 * (-t25 + t7);
    F t334 = 0.2e1 * t109 * t266;
    F t335 = -0.2e1 * t10 * t331 + t245 * t328 + t334;
    F t337 = t115 * t266;
    F t341 = 0.2e1 * t10 * t271 - t269 * t278 + t284 + t290;
    F t346 = 0.2e1 * t125 * t266 + 0.2e1 * t14 * t271 - 0.2e1 * t14 * t287;
    F t351 = 0.2e1 * t132 * t266;
    F t352 = -0.2e1 * t14 * t301 - 0.2e1 * t271 * t62 + 0.2e1 * t283 * t296 + t351;
    F t354 = 0.2e1 * t283 * y0;
    F t358 = 0.2e1 * t141 * t266;
    F t359 = -0.2e1 * t13 * t271 - 0.2e1 * t14 * t311 - t306 + t354 + t358;
    F t364 = 0.2e1 * t148 * t266;
    F t365 = -0.2e1 * t14 * t323 + 0.2e1 * t271 * t62 + 0.2e1 * t283 * t318 + t364;
    F t367 = 0.2e1 * t283 * y1;
    F t371 = 0.2e1 * t155 * t266;
    F t372 = 0.2e1 * t13 * t271 - 0.2e1 * t14 * t331 + t306 - t367 + t371;
    F t378 = 0.2e1 * t10 * t287 - t278 * t285 + t274;
    F t380 = 0.2e1 * t283 * yb0;
    F t383 = 0.2e1 * t10 * t301 - t278 * t294 + t306 + t326 - t380;
    F t386 = 0.2e1 * t10 * t311 - t278 * t308 + t334;
    F t389 = 0.2e1 * t10 * t323 - t278 * t316 + t304 - t306 + t380;
    F t392 = 0.2e1 * t10 * t331 - t278 * t328 + t314;
    F t398 = 0.2e1 * t14 * t301 - 0.2e1 * t283 * t298 - 0.2e1 * t287 * t62 + t364;
    F t401 = -0.2e1 * t13 * t287 + 0.2e1 * t14 * t311 + t306 - t354 + t371;
    F t405 = 0.2e1 * t14 * t323 - 0.2e1 * t283 * t320 + 0.2e1 * t287 * t62 + t351;
    F t408 = 0.2e1 * t13 * t287 + 0.2e1 * t14 * t331 - t306 + t358 + t367;
    F t409 = 0.2e1 * t283 * t13;
    F t413 = 0.2e1 * t198 * t266;
    F t418 = 0.2e1 * t204 * t266;
    F t419 = -0.2e1 * t13 * t301 - 0.2e1 * t311 * t62 + t418;
    F t424 = 0.2e1 * t210 * t266 + 0.2e1 * t301 * t62 - 0.2e1 * t323 * t62;
    F t428 = 0.2e1 * t216 * t266;
    F t429 = 0.2e1 * t13 * t301 - 0.2e1 * t331 * t62 + t428;
    F t433 = 0.2e1 * t222 * t266;
    F t437 = -0.2e1 * t13 * t323 + 0.2e1 * t311 * t62 + t428;
    F t442 = 0.2e1 * t13 * t311 - 0.2e1 * t13 * t331 + 0.2e1 * t231 * t266;
    F t443 = -0.2e1 * t283 * t13;
    F t449 = 0.2e1 * t13 * t323 + 0.2e1 * t331 * t62 + t418;

    F unknown[16][8];

    unknown[0][0] = -0.4e1 * t10 * t20 + 0.2e1 * t34;
    unknown[0][1] = t43;
    unknown[0][2] = t50;
    unknown[0][3] = t59;
    unknown[0][4] = t74;
    unknown[0][5] = t87;
    unknown[0][6] = t99;
    unknown[0][7] = t112;
    unknown[1][0] = t43;
    unknown[1][1] = 0.2e1 * t113 * t37 + 0.2e1 * t116;
    unknown[1][2] = t121;
    unknown[1][3] = t128;
    unknown[1][4] = t135;
    unknown[1][5] = t144;
    unknown[1][6] = t151;
    unknown[1][7] = t158;
    unknown[2][0] = t50;
    unknown[2][1] = t121;
    unknown[2][2] = 0.4e1 * t10 * t45 + 0.2e1 * t34;
    unknown[2][3] = t163;
    unknown[2][4] = t166;
    unknown[2][5] = t170;
    unknown[2][6] = t173;
    unknown[2][7] = t177;
    unknown[3][0] = t59;
    unknown[3][1] = t128;
    unknown[3][2] = t163;
    unknown[3][3] = -0.2e1 * t115 * t19 * xb0 + 0.2e1 * t116;
    unknown[3][4] = t183;
    unknown[3][5] = t188;
    unknown[3][6] = t191;
    unknown[3][7] = t194;
    unknown[4][0] = t74;
    unknown[4][1] = t135;
    unknown[4][2] = t166;
    unknown[4][3] = t183;
    unknown[4][4] = -0.4e1 * t62 * t67 + t195 + t200;
    unknown[4][5] = t207;
    unknown[4][6] = t213;
    unknown[4][7] = t219;
    unknown[5][0] = t87;
    unknown[5][1] = t144;
    unknown[5][2] = t170;
    unknown[5][3] = t188;
    unknown[5][4] = t207;
    unknown[5][5] = -0.4e1 * t13 * t82 + t195 + t224;
    unknown[5][6] = t228;
    unknown[5][7] = t234;
    unknown[6][0] = t99;
    unknown[6][1] = t151;
    unknown[6][2] = t173;
    unknown[6][3] = t191;
    unknown[6][4] = t213;
    unknown[6][5] = t228;
    unknown[6][6] = 0.4e1 * t62 * t94 + t200 + t235;
    unknown[6][7] = t241;
    unknown[7][0] = t112;
    unknown[7][1] = t158;
    unknown[7][2] = t177;
    unknown[7][3] = t194;
    unknown[7][4] = t219;
    unknown[7][5] = t234;
    unknown[7][6] = t241;
    unknown[7][7] = 0.4e1 * t107 * t13 + t224 + t235;
    unknown[8][0] = 0.2e1 * t245 * t253 + 0.2e1 * t267;
    unknown[8][1] = t275;
    unknown[8][2] = t282;
    unknown[8][3] = t291;
    unknown[8][4] = t307;
    unknown[8][5] = t315;
    unknown[8][6] = t327;
    unknown[8][7] = t335;
    unknown[9][0] = t275;
    unknown[9][1] = -0.4e1 * t14 * t271 + 0.2e1 * t337;
    unknown[9][2] = t341;
    unknown[9][3] = t346;
    unknown[9][4] = t352;
    unknown[9][5] = t359;
    unknown[9][6] = t365;
    unknown[9][7] = t372;
    unknown[10][0] = t282;
    unknown[10][1] = t341;
    unknown[10][2] = -0.2e1 * t252 * t33 * yb0 + 0.2e1 * t267;
    unknown[10][3] = t378;
    unknown[10][4] = t383;
    unknown[10][5] = t386;
    unknown[10][6] = t389;
    unknown[10][7] = t392;
    unknown[11][0] = t291;
    unknown[11][1] = t346;
    unknown[11][2] = t378;
    unknown[11][3] = 0.4e1 * t14 * t287 + 0.2e1 * t337;
    unknown[11][4] = t398;
    unknown[11][5] = t401;
    unknown[11][6] = t405;
    unknown[11][7] = t408;
    unknown[12][0] = t307;
    unknown[12][1] = t352;
    unknown[12][2] = t383;
    unknown[12][3] = t398;
    unknown[12][4] = -0.4e1 * t301 * t62 + t409 + t413;
    unknown[12][5] = t419;
    unknown[12][6] = t424;
    unknown[12][7] = t429;
    unknown[13][0] = t315;
    unknown[13][1] = t359;
    unknown[13][2] = t386;
    unknown[13][3] = t401;
    unknown[13][4] = t419;
    unknown[13][5] = -0.4e1 * t13 * t311 + t409 + t433;
    unknown[13][6] = t437;
    unknown[13][7] = t442;
    unknown[14][0] = t327;
    unknown[14][1] = t365;
    unknown[14][2] = t389;
    unknown[14][3] = t405;
    unknown[14][4] = t424;
    unknown[14][5] = t437;
    unknown[14][6] = 0.4e1 * t323 * t62 + t413 + t443;
    unknown[14][7] = t449;
    unknown[15][0] = t335;
    unknown[15][1] = t372;
    unknown[15][2] = t392;
    unknown[15][3] = t408;
    unknown[15][4] = t429;
    unknown[15][5] = t442;
    unknown[15][6] = t449;
    unknown[15][7] = 0.4e1 * t13 * t331 + t433 + t443;

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.hess, 16, 8);
    // clang-format on
}
