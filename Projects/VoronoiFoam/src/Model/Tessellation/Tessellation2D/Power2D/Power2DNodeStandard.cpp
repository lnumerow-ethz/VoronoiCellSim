#include "Projects/VoronoiFoam/include/Model/Tessellation/Tessellation2D/Power2D/Power2D.h"
#include "CRLHelper/MapleHelper.h"

void Power2D::computeNodePosStandard(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F w0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F w1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F w2 = inputs[8];

    F t1 = y1 - y2;
    F t2 = y0 * y0;
    F t4 = x1 * x1;
    F t5 = x2 * x2;
    F t6 = y1 * y1;
    F t7 = y2 * y2;
    F t8 = -t4 + t5 - t6 + t7 + w1 - w2;
    F t11 = x0 * x0;
    F t17 = -x1 + x2;

    F unknown[2];

    unknown[0] = 0.1e1 / (0.2e1 * y0 * t17 + 0.2e1 * y1 * (x0 - x2) - 0.2e1 * y2 * (x0 - x1)) * (t2 * t1 + y0 * t8 + y2 * t6 + y1 * (t11 - t5 - t7 - w0 + w2) + (-t11 + t4 + w0 - w1) * y2);
    unknown[1] = 0.1e1 / (0.2e1 * x0 * t1 + 0.2e1 * x1 * (-y0 + y2) + 0.2e1 * x2 * (-y1 + y0)) * (t11 * t17 - x0 * t8 - x2 * t4 + x1 * (t5 - t2 + t7 + w0 - w2) - (-t2 + t6 + w0 - w1) * x2);

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.pos, 2, 1);
    // clang-format on
}

void Power2D::computeNodeGradStandard(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F w0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F w1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F w2 = inputs[8];

    F t1 = x0 * y1;
    F t2 = y2 * x0;
    F t4 = -x1 + x2;
    F t6 = x0 - x2;
    F t8 = x0 - x1;
    F t11 = 0.2e1 * y0 * t4 + 0.2e1 * y1 * t6 - 0.2e1 * t8 * y2;
    F t12 = 0.1e1 / t11;
    F t14 = y1 - y2;
    F t15 = y0 * y0;
    F t17 = x1 * x1;
    F t18 = x2 * x2;
    F t19 = y1 * y1;
    F t20 = y2 * y2;
    F t21 = -t17 + t18 - t19 + t20 + w1 - w2;
    F t24 = x0 * x0;
    F t30 = t11 * t11;
    F t32 = 0.1e1 / t30 * (t15 * t14 + y0 * t21 + y2 * t19 + y1 * (t24 - t18 - t20 - w0 + w2) + (-t24 + t17 + w0 - w1) * y2);
    F t42 = x1 * y0;
    F t43 = y2 * x1;
    F t46 = -y0 + y2;
    F t52 = 0.2e1 * y1 * y2;
    F t58 = x2 * y0;
    F t59 = x2 * y1;
    F t62 = -y1 + y0;
    F t79 = 0.2e1 * x0 * t14 + 0.2e1 * x1 * t46 + 0.2e1 * t62 * x2;
    F t80 = 0.1e1 / t79;
    F t90 = t79 * t79;
    F t92 = 0.1e1 / t90 * (t24 * t4 - x0 * t21 - x2 * t17 + x1 * (t18 - t15 + t20 + w0 - w2) - (-t15 + t19 + w0 - w1) * x2);
    F t103 = 0.2e1 * x1 * x2;

    F unknown[2][9];

    unknown[0][0] = 0.2e1 * t12 * (t1 - t2) - 0.2e1 * t14 * t32;
    unknown[0][1] = t12 * (0.2e1 * y0 * t14 - t17 + t18 - t19 + t20 + w1 - w2) - 0.2e1 * t4 * t32;
    unknown[0][2] = -t12 * t14;
    unknown[0][3] = 0.2e1 * t12 * (-t42 + t43) - 0.2e1 * t46 * t32;
    unknown[0][4] = t12 * (-0.2e1 * y1 * y0 + t15 - t18 - t20 + t24 + t52 - w0 + w2) - 0.2e1 * t6 * t32;
    unknown[0][5] = -t12 * t46;
    unknown[0][6] = 0.2e1 * t12 * (t58 - t59) - 0.2e1 * t62 * t32;
    unknown[0][7] = t12 * (0.2e1 * y2 * y0 - t15 + t17 + t19 - t24 - t52 + w0 - w1) + 0.2e1 * t8 * t32;
    unknown[0][8] = -t12 * t62;
    unknown[1][0] = t80 * (0.2e1 * x0 * t4 + t17 - t18 + t19 - t20 - w1 + w2) - 0.2e1 * t14 * t92;
    unknown[1][1] = 0.2e1 * t80 * (-t42 + t58) - 0.2e1 * t4 * t92;
    unknown[1][2] = -t80 * t4;
    unknown[1][3] = t80 * (0.2e1 * x1 * x0 - t103 - t15 + t18 + t20 - t24 + w0 - w2) - 0.2e1 * t46 * t92;
    unknown[1][4] = 0.2e1 * t80 * (t1 - t59) - 0.2e1 * t6 * t92;
    unknown[1][5] = -t80 * t6;
    unknown[1][6] = t80 * (-0.2e1 * x2 * x0 + t103 + t15 - t17 - t19 + t24 - w0 + w1) - 0.2e1 * t62 * t92;
    unknown[1][7] = 0.2e1 * t80 * (-t2 + t43) + 0.2e1 * t8 * t92;
    unknown[1][8] = t80 * t8;

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.grad, 2, 9);
    // clang-format on
}

void Power2D::computeNodeHessStandard(const VectorXF &inputs, NodeData &node_data) const {
    // clang-format off
    F x0 = inputs[0];
    F y0 = inputs[1];
    F w0 = inputs[2];
    F x1 = inputs[3];
    F y1 = inputs[4];
    F w1 = inputs[5];
    F x2 = inputs[6];
    F y2 = inputs[7];
    F w2 = inputs[8];

    F t1 = y1 - y2;
    F t2 = -x1 + x2;
    F t4 = x0 - x2;
    F t6 = x0 - x1;
    F t9 = 0.2e1 * y0 * t2 + 0.2e1 * y1 * t4 - 0.2e1 * t6 * y2;
    F t10 = 0.1e1 / t9;
    F t11 = 0.2e1 * t10 * t1;
    F t12 = x0 * y1;
    F t13 = y2 * x0;
    F t15 = t9 * t9;
    F t16 = 0.1e1 / t15;
    F t17 = 0.2e1 * t16 * (t12 - t13);
    F t20 = y0 * y0;
    F t22 = x1 * x1;
    F t23 = x2 * x2;
    F t24 = y1 * y1;
    F t25 = y2 * y2;
    F t26 = -t22 + t23 - t24 + t25 + w1 - w2;
    F t29 = x0 * x0;
    F t34 = t20 * t1 + y0 * t26 + y2 * t24 + y1 * (t29 - t23 - t25 - w0 + w2) + (-t29 + t22 + w0 - w1) * y2;
    F t37 = 0.1e1 / t9 / t15 * t34;
    F t38 = 0.4e1 * t1 * t1;
    F t46 = t16 * (0.2e1 * y0 * t1 - t22 + t23 - t24 + t25 + w1 - w2);
    F t48 = 0.4e1 * t2 * t1;
    F t51 = -0.2e1 * t1 * t46 - 0.2e1 * t2 * t17 + 0.2e1 * t48 * t37;
    F t52 = -t16 * t1;
    F t53 = 0.2e1 * t1 * t52;
    F t54 = -y0 + y2;
    F t56 = x1 * y0;
    F t57 = y2 * x1;
    F t59 = 0.2e1 * t16 * (-t56 + t57);
    F t61 = 0.4e1 * t54 * t1;
    F t64 = -0.2e1 * t1 * t59 - 0.2e1 * t54 * t17 + 0.2e1 * t61 * t37;
    F t66 = 0.2e1 * t10 * x0;
    F t71 = 0.2e1 * y1 * y2;
    F t73 = t16 * (-0.2e1 * y1 * y0 + t20 - t23 - t25 + t29 + t71 - w0 + w2);
    F t75 = 0.4e1 * t4 * t1;
    F t79 = 0.2e1 * t16 * t34;
    F t80 = -0.2e1 * t1 * t73 - 0.2e1 * t4 * t17 + 0.2e1 * t75 * t37 + t66 - t79;
    F t81 = -t16 * t54;
    F t82 = 0.2e1 * t1 * t81;
    F t83 = -y1 + y0;
    F t85 = x2 * y0;
    F t86 = x2 * y1;
    F t88 = 0.2e1 * t16 * (t85 - t86);
    F t90 = 0.4e1 * t83 * t1;
    F t93 = -0.2e1 * t1 * t88 - 0.2e1 * t83 * t17 + 0.2e1 * t90 * t37;
    F t98 = t16 * (0.2e1 * y2 * y0 - t20 + t22 + t24 - t29 - t71 + w0 - w1);
    F t100 = -0.4e1 * t6 * t1;
    F t103 = -0.2e1 * t1 * t98 + 0.2e1 * t100 * t37 + 0.2e1 * t6 * t17 - t66 + t79;
    F t104 = -t16 * t83;
    F t105 = 0.2e1 * t1 * t104;
    F t108 = 0.4e1 * t2 * t2;
    F t112 = 0.2e1 * t2 * t52;
    F t114 = 0.2e1 * t10 * x1;
    F t117 = 0.4e1 * t54 * t2;
    F t120 = 0.2e1 * t117 * t37 - 0.2e1 * t2 * t59 - 0.2e1 * t54 * t46 - t114 + t79;
    F t121 = 0.2e1 * t10 * t83;
    F t124 = 0.4e1 * t4 * t2;
    F t127 = 0.2e1 * t124 * t37 - 0.2e1 * t2 * t73 - 0.2e1 * t4 * t46 + t121;
    F t129 = -0.2e1 * t2 * t81 + t10;
    F t131 = 0.2e1 * t10 * x2;
    F t134 = 0.4e1 * t83 * t2;
    F t137 = 0.2e1 * t134 * t37 - 0.2e1 * t2 * t88 - 0.2e1 * t83 * t46 + t131 - t79;
    F t138 = 0.2e1 * t10 * t54;
    F t141 = -0.4e1 * t6 * t2;
    F t144 = 0.2e1 * t141 * t37 - 0.2e1 * t2 * t98 + 0.2e1 * t6 * t46 + t138;
    F t146 = -0.2e1 * t2 * t104 - t10;
    F t147 = 0.2e1 * t54 * t52;
    F t149 = -0.2e1 * t4 * t52 - t10;
    F t150 = 0.2e1 * t83 * t52;
    F t152 = 0.2e1 * t6 * t52 + t10;
    F t155 = 0.4e1 * t54 * t54;
    F t161 = 0.4e1 * t4 * t54;
    F t164 = 0.2e1 * t161 * t37 - 0.2e1 * t4 * t59 - 0.2e1 * t54 * t73;
    F t165 = 0.2e1 * t54 * t81;
    F t168 = 0.4e1 * t83 * t54;
    F t171 = 0.2e1 * t168 * t37 - 0.2e1 * t54 * t88 - 0.2e1 * t83 * t59;
    F t174 = -0.4e1 * t6 * t54;
    F t177 = 0.2e1 * t174 * t37 - 0.2e1 * t54 * t98 + 0.2e1 * t6 * t59 + t114 - t79;
    F t178 = 0.2e1 * t54 * t104;
    F t181 = 0.4e1 * t4 * t4;
    F t185 = 0.2e1 * t4 * t81;
    F t188 = 0.4e1 * t83 * t4;
    F t191 = 0.2e1 * t188 * t37 - 0.2e1 * t4 * t88 - 0.2e1 * t83 * t73 - t131 + t79;
    F t194 = -0.4e1 * t6 * t4;
    F t197 = 0.2e1 * t194 * t37 - 0.2e1 * t4 * t98 + 0.2e1 * t6 * t73 + t11;
    F t199 = -0.2e1 * t4 * t104 + t10;
    F t200 = 0.2e1 * t83 * t81;
    F t202 = 0.2e1 * t6 * t81 - t10;
    F t205 = 0.4e1 * t83 * t83;
    F t211 = -0.4e1 * t6 * t83;
    F t214 = 0.2e1 * t211 * t37 + 0.2e1 * t6 * t88 - 0.2e1 * t83 * t98;
    F t215 = 0.2e1 * t83 * t104;
    F t218 = 0.4e1 * t6 * t6;
    F t222 = -0.2e1 * t6 * t104;
    F t227 = 0.2e1 * x0 * t1 + 0.2e1 * x1 * t54 + 0.2e1 * t83 * x2;
    F t228 = 0.1e1 / t227;
    F t229 = 0.2e1 * t228 * t2;
    F t233 = t227 * t227;
    F t234 = 0.1e1 / t233;
    F t235 = t234 * (0.2e1 * x0 * t2 + t22 - t23 + t24 - t25 - w1 + w2);
    F t245 = t29 * t2 - x0 * t26 - x2 * t22 + x1 * (t23 - t20 + t25 + w0 - w2) - (-t20 + t24 + w0 - w1) * x2;
    F t248 = 0.1e1 / t227 / t233 * t245;
    F t254 = 0.2e1 * t234 * (-t56 + t85);
    F t258 = -0.2e1 * t1 * t254 - 0.2e1 * t2 * t235 + 0.2e1 * t48 * t248;
    F t259 = -t234 * t2;
    F t260 = 0.2e1 * t1 * t259;
    F t261 = -0.2e1 * t228 * t6;
    F t266 = 0.2e1 * x1 * x2;
    F t268 = t234 * (0.2e1 * x1 * x0 - t20 + t23 + t25 - t266 - t29 + w0 - w2);
    F t272 = -0.2e1 * t1 * t268 - 0.2e1 * t54 * t235 + 0.2e1 * t61 * t248 + t261;
    F t274 = 0.2e1 * t228 * y1;
    F t277 = 0.2e1 * t234 * (t12 - t86);
    F t282 = 0.2e1 * t234 * t245;
    F t283 = -0.2e1 * t1 * t277 - 0.2e1 * t4 * t235 + 0.2e1 * t75 * t248 + t274 - t282;
    F t284 = -t234 * t4;
    F t286 = -0.2e1 * t1 * t284 - t228;
    F t287 = 0.2e1 * t228 * t4;
    F t292 = t234 * (-0.2e1 * x2 * x0 + t20 - t22 - t24 + t266 + t29 - w0 + w1);
    F t296 = -0.2e1 * t1 * t292 - 0.2e1 * t83 * t235 + 0.2e1 * t90 * t248 + t287;
    F t298 = 0.2e1 * t228 * y2;
    F t301 = 0.2e1 * t234 * (-t13 + t57);
    F t305 = -0.2e1 * t1 * t301 + 0.2e1 * t100 * t248 + 0.2e1 * t6 * t235 + t282 - t298;
    F t306 = t234 * t6;
    F t308 = -0.2e1 * t1 * t306 + t228;
    F t314 = 0.2e1 * t2 * t259;
    F t316 = 0.2e1 * t228 * y0;
    F t321 = 0.2e1 * t117 * t248 - 0.2e1 * t2 * t268 - 0.2e1 * t54 * t254 + t282 - t316;
    F t326 = 0.2e1 * t124 * t248 - 0.2e1 * t2 * t277 - 0.2e1 * t4 * t254;
    F t327 = 0.2e1 * t2 * t284;
    F t332 = 0.2e1 * t134 * t248 - 0.2e1 * t2 * t292 - 0.2e1 * t83 * t254 - t282 + t316;
    F t337 = 0.2e1 * t141 * t248 - 0.2e1 * t2 * t301 + 0.2e1 * t6 * t254;
    F t338 = 0.2e1 * t2 * t306;
    F t340 = -0.2e1 * t54 * t259 + t228;
    F t341 = 0.2e1 * t4 * t259;
    F t343 = -0.2e1 * t83 * t259 - t228;
    F t344 = -0.2e1 * t6 * t259;
    F t354 = 0.2e1 * t161 * t248 - 0.2e1 * t4 * t268 - 0.2e1 * t54 * t277;
    F t355 = 0.2e1 * t54 * t284;
    F t360 = 0.2e1 * t168 * t248 - 0.2e1 * t83 * t268 - 0.2e1 * t54 * t292 + t229;
    F t365 = 0.2e1 * t174 * t248 + 0.2e1 * t6 * t268 - 0.2e1 * t54 * t301 - t282 + t298;
    F t367 = -0.2e1 * t54 * t306 - t228;
    F t373 = 0.2e1 * t4 * t284;
    F t378 = 0.2e1 * t188 * t248 - 0.2e1 * t83 * t277 - 0.2e1 * t4 * t292 - t274 + t282;
    F t383 = 0.2e1 * t194 * t248 + 0.2e1 * t6 * t277 - 0.2e1 * t4 * t301;
    F t384 = 0.2e1 * t4 * t306;
    F t386 = -0.2e1 * t83 * t284 + t228;
    F t387 = -0.2e1 * t6 * t284;
    F t397 = 0.2e1 * t211 * t248 + 0.2e1 * t6 * t292 - 0.2e1 * t83 * t301;
    F t398 = 0.2e1 * t83 * t306;
    F t404 = -0.2e1 * t6 * t306;

    F unknown[18][9];

    unknown[0][0] = -0.4e1 * t1 * t17 + 0.2e1 * t38 * t37 + t11;
    unknown[0][1] = t51;
    unknown[0][2] = -t53;
    unknown[0][3] = t64;
    unknown[0][4] = t80;
    unknown[0][5] = -t82;
    unknown[0][6] = t93;
    unknown[0][7] = t103;
    unknown[0][8] = -t105;
    unknown[1][0] = t51;
    unknown[1][1] = 0.2e1 * t108 * t37 - 0.4e1 * t2 * t46 + t11;
    unknown[1][2] = -t112;
    unknown[1][3] = t120;
    unknown[1][4] = t127;
    unknown[1][5] = t129;
    unknown[1][6] = t137;
    unknown[1][7] = t144;
    unknown[1][8] = t146;
    unknown[2][0] = -t53;
    unknown[2][1] = -t112;
    unknown[2][2] = 0.0e0;
    unknown[2][3] = -t147;
    unknown[2][4] = t149;
    unknown[2][5] = 0.0e0;
    unknown[2][6] = -t150;
    unknown[2][7] = t152;
    unknown[2][8] = 0.0e0;
    unknown[3][0] = t64;
    unknown[3][1] = t120;
    unknown[3][2] = -t147;
    unknown[3][3] = 0.2e1 * t155 * t37 - 0.4e1 * t54 * t59 + t138;
    unknown[3][4] = t164;
    unknown[3][5] = -t165;
    unknown[3][6] = t171;
    unknown[3][7] = t177;
    unknown[3][8] = -t178;
    unknown[4][0] = t80;
    unknown[4][1] = t127;
    unknown[4][2] = t149;
    unknown[4][3] = t164;
    unknown[4][4] = 0.2e1 * t181 * t37 - 0.4e1 * t4 * t73 + t138;
    unknown[4][5] = -t185;
    unknown[4][6] = t191;
    unknown[4][7] = t197;
    unknown[4][8] = t199;
    unknown[5][0] = -t82;
    unknown[5][1] = t129;
    unknown[5][2] = 0.0e0;
    unknown[5][3] = -t165;
    unknown[5][4] = -t185;
    unknown[5][5] = 0.0e0;
    unknown[5][6] = -t200;
    unknown[5][7] = t202;
    unknown[5][8] = 0.0e0;
    unknown[6][0] = t93;
    unknown[6][1] = t137;
    unknown[6][2] = -t150;
    unknown[6][3] = t171;
    unknown[6][4] = t191;
    unknown[6][5] = -t200;
    unknown[6][6] = 0.2e1 * t205 * t37 - 0.4e1 * t83 * t88 + t121;
    unknown[6][7] = t214;
    unknown[6][8] = -t215;
    unknown[7][0] = t103;
    unknown[7][1] = t144;
    unknown[7][2] = t152;
    unknown[7][3] = t177;
    unknown[7][4] = t197;
    unknown[7][5] = t202;
    unknown[7][6] = t214;
    unknown[7][7] = 0.2e1 * t218 * t37 + 0.4e1 * t6 * t98 + t121;
    unknown[7][8] = -t222;
    unknown[8][0] = -t105;
    unknown[8][1] = t146;
    unknown[8][2] = 0.0e0;
    unknown[8][3] = -t178;
    unknown[8][4] = t199;
    unknown[8][5] = 0.0e0;
    unknown[8][6] = -t215;
    unknown[8][7] = -t222;
    unknown[8][8] = 0.0e0;
    unknown[9][0] = -0.4e1 * t1 * t235 + 0.2e1 * t38 * t248 + t229;
    unknown[9][1] = t258;
    unknown[9][2] = -t260;
    unknown[9][3] = t272;
    unknown[9][4] = t283;
    unknown[9][5] = t286;
    unknown[9][6] = t296;
    unknown[9][7] = t305;
    unknown[9][8] = t308;
    unknown[10][0] = t258;
    unknown[10][1] = 0.2e1 * t108 * t248 - 0.4e1 * t2 * t254 + t229;
    unknown[10][2] = -t314;
    unknown[10][3] = t321;
    unknown[10][4] = t326;
    unknown[10][5] = -t327;
    unknown[10][6] = t332;
    unknown[10][7] = t337;
    unknown[10][8] = -t338;
    unknown[11][0] = -t260;
    unknown[11][1] = -t314;
    unknown[11][2] = 0.0e0;
    unknown[11][3] = t340;
    unknown[11][4] = -t341;
    unknown[11][5] = 0.0e0;
    unknown[11][6] = t343;
    unknown[11][7] = -t344;
    unknown[11][8] = 0.0e0;
    unknown[12][0] = t272;
    unknown[12][1] = t321;
    unknown[12][2] = t340;
    unknown[12][3] = 0.2e1 * t155 * t248 - 0.4e1 * t54 * t268 + t287;
    unknown[12][4] = t354;
    unknown[12][5] = -t355;
    unknown[12][6] = t360;
    unknown[12][7] = t365;
    unknown[12][8] = t367;
    unknown[13][0] = t283;
    unknown[13][1] = t326;
    unknown[13][2] = -t341;
    unknown[13][3] = t354;
    unknown[13][4] = 0.2e1 * t181 * t248 - 0.4e1 * t4 * t277 + t287;
    unknown[13][5] = -t373;
    unknown[13][6] = t378;
    unknown[13][7] = t383;
    unknown[13][8] = -t384;
    unknown[14][0] = t286;
    unknown[14][1] = -t327;
    unknown[14][2] = 0.0e0;
    unknown[14][3] = -t355;
    unknown[14][4] = -t373;
    unknown[14][5] = 0.0e0;
    unknown[14][6] = t386;
    unknown[14][7] = -t387;
    unknown[14][8] = 0.0e0;
    unknown[15][0] = t296;
    unknown[15][1] = t332;
    unknown[15][2] = t343;
    unknown[15][3] = t360;
    unknown[15][4] = t378;
    unknown[15][5] = t386;
    unknown[15][6] = 0.2e1 * t205 * t248 - 0.4e1 * t83 * t292 + t261;
    unknown[15][7] = t397;
    unknown[15][8] = -t398;
    unknown[16][0] = t305;
    unknown[16][1] = t337;
    unknown[16][2] = -t344;
    unknown[16][3] = t365;
    unknown[16][4] = t383;
    unknown[16][5] = -t387;
    unknown[16][6] = t397;
    unknown[16][7] = 0.2e1 * t218 * t248 + 0.4e1 * t6 * t301 + t261;
    unknown[16][8] = -t404;
    unknown[17][0] = t308;
    unknown[17][1] = -t338;
    unknown[17][2] = 0.0e0;
    unknown[17][3] = t367;
    unknown[17][4] = -t384;
    unknown[17][5] = 0.0e0;
    unknown[17][6] = -t398;
    unknown[17][7] = -t404;
    unknown[17][8] = 0.0e0;

    processMapleOutput(reinterpret_cast<F *>(unknown), node_data.hess, 18, 9);
    // clang-format on
}
